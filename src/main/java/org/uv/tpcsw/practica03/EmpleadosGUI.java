/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package org.uv.tpcsw.practica03;

import java.awt.Point;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;

/**
 *
 * @author roberto
 */
public class EmpleadosGUI extends javax.swing.JInternalFrame {

    /**
     * Creates new form EmpleadosGUI
     */
    public EmpleadosGUI() {
        initComponents();
        cargarDepartamentos();
        cargarTabla();
        jTable1.addMouseListener(new MouseAdapter(){
            public void mousePressed(MouseEvent Mouse_evt)
                {
                    JTable table = (JTable) Mouse_evt.getSource();
                    Point point = Mouse_evt.getPoint();
                    int row = table.rowAtPoint(point);
                    if(Mouse_evt.getClickCount() == 1){
                        txtNombre.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString());
                        txtNombre.setEnabled(true);
                        txtClave.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString());
                        txtTelefono.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString());
                        txtTelefono.setEnabled(true);
                        txtDireccion.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 2).toString());
                        txtDireccion.setEnabled(true);
                        btnActualizar.setEnabled(true);
                        
                    }
                }
        });
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtClave = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        txtDireccion = new javax.swing.JTextField();
        txtTelefono = new javax.swing.JTextField();
        btnGuardar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnBuscarId = new javax.swing.JButton();
        btnTodos = new javax.swing.JButton();
        btnBorrar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btnActualizar = new javax.swing.JButton();
        cbxDepartamentos = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        btnNuevo = new javax.swing.JButton();
        btnBuscarID = new javax.swing.JButton();
        btnBorrarID = new javax.swing.JButton();

        setClosable(true);
        setMinimumSize(new java.awt.Dimension(700, 400));
        setPreferredSize(new java.awt.Dimension(700, 400));

        jLabel1.setText("Clave:");

        jLabel2.setText("Nombre:");

        jLabel3.setText("Direccion:");

        jLabel4.setText("Telefono:");

        txtClave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtClaveActionPerformed(evt);
            }
        });

        txtNombre.setEnabled(false);
        txtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreActionPerformed(evt);
            }
        });

        txtDireccion.setEnabled(false);

        txtTelefono.setEnabled(false);

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        btnBuscarId.setText("Buscar");
        btnBuscarId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarIdActionPerformed(evt);
            }
        });

        btnTodos.setText("Buscar Todos");
        btnTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTodosActionPerformed(evt);
            }
        });

        btnBorrar.setText("Borrar");
        btnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarActionPerformed(evt);
            }
        });

        jLabel5.setText("Nuevo Empleado");

        jLabel6.setText("Buscar o borrar empleado");

        jLabel7.setText("Buscar todos los empleados");

        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        cbxDepartamentos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--vacio--" }));

        jLabel8.setText("Departamento:");

        jLabel9.setText("Seleccione una accion a realizar");

        btnNuevo.setText("Nuevo empleado");

        btnBuscarID.setText("Buscar por ID");
        btnBuscarID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarIDActionPerformed(evt);
            }
        });

        btnBorrarID.setText("Borrar por ID");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3)
                                .addComponent(jLabel4)
                                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addComponent(jLabel8))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(btnGuardar)
                                                .addGap(137, 137, 137)
                                                .addComponent(jLabel1))
                                            .addComponent(btnActualizar))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtClave, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(btnBuscarId)
                                                .addGap(18, 18, 18)
                                                .addComponent(btnBorrar))))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(cbxDepartamentos, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtTelefono, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)))
                                .addGap(0, 137, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel6)
                                .addGap(216, 216, 216))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 631, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnNuevo)
                        .addGap(43, 43, 43)
                        .addComponent(btnBuscarID)
                        .addGap(48, 48, 48)
                        .addComponent(btnBorrarID)
                        .addGap(43, 43, 43)
                        .addComponent(btnTodos)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel9)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNuevo)
                    .addComponent(btnTodos)
                    .addComponent(btnBuscarID)
                    .addComponent(btnBorrarID))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 92, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(txtClave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGuardar))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(btnBuscarId)
                    .addComponent(btnBorrar)
                    .addComponent(btnActualizar))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbxDepartamentos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(51, 51, 51)
                .addComponent(jLabel7)
                .addGap(35, 35, 35)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cargarDepartamentos() {
        DAODepartamento daoDepartamento = new DAODepartamento();
        List<Departamento> departamentos = daoDepartamento.findAll();

        if (departamentos != null) {
            for (Departamento dep : departamentos) {
                departamentosMap.put(dep.getClave(), dep.getNombre());

                cbxDepartamentos.addItem(dep.getNombre());
            }
        } else {
            JOptionPane.showMessageDialog(this, "No se encontraron departamentos.");
        }
    }
    
    private void cargarTabla(){
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("Clave");
        modelo.addColumn("Nombre");
        modelo.addColumn("Dirección");
        modelo.addColumn("Teléfono");
        modelo.addColumn("Departamento");
        
        jTable1.setModel(modelo);
    }


    
    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        String nombreSeleccionado = (String) cbxDepartamentos.getSelectedItem();

        if (nombreSeleccionado.equals("--vacio--")) {
            JOptionPane.showMessageDialog(this, "Falta seleccionar un departamento.",
                    "Advertencia", JOptionPane.WARNING_MESSAGE);
            return;
        }

        Long departamentoId = null;
        for (Map.Entry<Long, String> entry : departamentosMap.entrySet()) {
            if (entry.getValue().equals(nombreSeleccionado)) {
                departamentoId = entry.getKey();
                break;
            }
        }

        if (departamentoId != null) {
            DAODepartamento daoDepartamento = new DAODepartamento();
            Departamento departamento = daoDepartamento.findById(departamentoId);

            if (departamento != null) {
                Empleado nuevoEmpleado = new Empleado();
                nuevoEmpleado.setNombre(txtNombre.getText());
                nuevoEmpleado.setDireccion(txtDireccion.getText());
                nuevoEmpleado.setTelefono(txtTelefono.getText());
                nuevoEmpleado.setDepto(departamento);

                DAOEmpleado daoEmpleado = new DAOEmpleado();
                if (daoEmpleado.save(nuevoEmpleado)) {
                    JOptionPane.showMessageDialog(this, "Empleado guardado con éxito.");
                } else {
                    JOptionPane.showMessageDialog(this, "Error al guardar el empleado.");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Departamento no encontrado.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Seleccione un departamento válido.");
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreActionPerformed

    private void btnBuscarIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarIdActionPerformed
        SessionFactory sf = HibernateUtil.getSessionFactory();
        Session session = sf.openSession();  
        Transaction t = session.beginTransaction();

        try {
            Long clave = Long.valueOf(txtClave.getText());

            Empleado empleado = session.get(Empleado.class, clave);

            if (empleado != null) {
                txtNombre.setText(empleado.getNombre());
                txtDireccion.setText(empleado.getDireccion());
                txtTelefono.setText(empleado.getTelefono());

                Departamento departamento = empleado.getDepto();
                if (departamento != null) {
                    cbxDepartamentos.setSelectedItem(departamentosMap.get(departamento.getClave()));
                } else {
                    JOptionPane.showMessageDialog(this, "Departamento no encontrado.");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Empleado no encontrado.");
            }

            t.commit();  
        } catch (Exception e) {
            if (t != null) {
                t.rollback();  
            }
            JOptionPane.showMessageDialog(this, "Error en el campo de clave");
        } finally {
            session.close();  
        }
    }//GEN-LAST:event_btnBuscarIdActionPerformed

    private void btnTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTodosActionPerformed
        SessionFactory sf = HibernateUtil.getSessionFactory();
        Session session = sf.openSession();  
        Transaction t = session.beginTransaction();

        try {
            
            DAOEmpleado daoEmpleado = new DAOEmpleado();
            List<Empleado> empleados = daoEmpleado.findAll();

            DefaultTableModel modelo = new DefaultTableModel();
            modelo.addColumn("Clave");
            modelo.addColumn("Nombre");
            modelo.addColumn("Dirección");
            modelo.addColumn("Teléfono");
            modelo.addColumn("Departamento");

            for (Empleado emp : empleados) {
                String nombreDepartamento = emp.getDepto() != null ? emp.getDepto().getNombre() : "Sin departamento";
                modelo.addRow(new Object[]{
                    emp.getClave(),
                    emp.getNombre(),
                    emp.getDireccion(),
                    emp.getTelefono(),
                    nombreDepartamento
                });
            }

            jTable1.setModel(modelo);

            t.commit();  
        } catch (Exception e) {
            if (t != null) {
                t.rollback();  
            }
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        } finally {
            session.close(); 
        }
    }//GEN-LAST:event_btnTodosActionPerformed

    private void txtClaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtClaveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtClaveActionPerformed

    private void btnBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarActionPerformed
        SessionFactory sf = HibernateUtil.getSessionFactory();
        Session session = sf.openSession();  
        Transaction t = null;

        try {
            t = session.beginTransaction(); 

            Long clave = Long.valueOf(txtClave.getText());
            Empleado empleadoEncontrado = session.get(Empleado.class, clave);

            if (empleadoEncontrado != null) {
                session.delete(empleadoEncontrado);  
                t.commit();  
                JOptionPane.showMessageDialog(this, "Empleado eliminado");
            } else {
                JOptionPane.showMessageDialog(this, "Empleado no encontrado");
            }
        } catch (Exception e) {
            if (t != null) {
                t.rollback();  
            }
            JOptionPane.showMessageDialog(this, "Error al eliminar empleado: " + e.getMessage());
        } finally {
            session.close();  
        }
    }//GEN-LAST:event_btnBorrarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        // TODO add your handling code here:
        SessionFactory sf = HibernateUtil.getSessionFactory();
        Session session = sf.openSession();  
        Transaction t = null;

        try {
            t = session.beginTransaction();  

            Long clave = Long.valueOf(txtClave.getText());

            Empleado empleadoEncontrado = session.get(Empleado.class, clave);
            if (empleadoEncontrado != null) {
                empleadoEncontrado.setNombre(txtNombre.getText());
                empleadoEncontrado.setDireccion(txtDireccion.getText());
                empleadoEncontrado.setTelefono(txtTelefono.getText());

                session.update(empleadoEncontrado);  
                t.commit();  

                JOptionPane.showMessageDialog(this, "Empleado actualizado");
            } else {
                JOptionPane.showMessageDialog(this, "Empleado no encontrado");
            }
        } catch (Exception e) {
            if (t != null) {
                t.rollback();  
            }
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        } finally {
            session.close();  
        }
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnBuscarIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnBuscarIDActionPerformed

    private Map<Long, String> departamentosMap = new HashMap<>();

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnBorrar;
    private javax.swing.JButton btnBorrarID;
    private javax.swing.JButton btnBuscarID;
    private javax.swing.JButton btnBuscarId;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnTodos;
    private javax.swing.JComboBox<String> cbxDepartamentos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtClave;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtTelefono;
    // End of variables declaration//GEN-END:variables
}

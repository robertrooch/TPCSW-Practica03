/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package org.uv.tpcsw.practica03;

import java.util.List;
import java.util.Set;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;

/**
 *
 * @author roberto
 */
public class DepartamentosGUI extends javax.swing.JInternalFrame {

    /**
     * Creates new form EmpleadosGUI
     */
    public DepartamentosGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtClave = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        btnGuardar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btoBuscarId = new javax.swing.JButton();
        btonTodos = new javax.swing.JButton();
        btnBorrar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btonActualizar = new javax.swing.JButton();

        setClosable(true);
        setMinimumSize(new java.awt.Dimension(700, 400));
        setPreferredSize(new java.awt.Dimension(700, 400));

        jLabel1.setText("Clave:");

        jLabel2.setText("Nombre:");

        txtClave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtClaveActionPerformed(evt);
            }
        });

        txtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreActionPerformed(evt);
            }
        });

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        btoBuscarId.setText("Buscar");
        btoBuscarId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btoBuscarIdActionPerformed(evt);
            }
        });

        btonTodos.setText("Buscar Todos");
        btonTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btonTodosActionPerformed(evt);
            }
        });

        btnBorrar.setText("Borrar");
        btnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarActionPerformed(evt);
            }
        });

        jLabel5.setText("Nuevo Departamento:");

        jLabel6.setText("Buscar o borrar empleado");

        jLabel7.setText("Buscar todos los empleados");

        btonActualizar.setText("Actualizar");
        btonActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btonActualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(153, 153, 153)
                                        .addComponent(btoBuscarId)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnBorrar))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnGuardar)
                                        .addGap(61, 61, 61)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel6)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel1)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtClave, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 631, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btonActualizar)
                                .addGap(320, 320, 320))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jLabel7))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btonTodos)))
                .addGap(0, 51, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(btnGuardar)
                    .addComponent(jLabel1)
                    .addComponent(txtClave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btoBuscarId)
                    .addComponent(btnBorrar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btonActualizar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btonTodos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        Departamento departamento = new Departamento();
        //empleado.setClave(10);
        departamento.setNombre(txtNombre.getText());

        
        DAODepartamento dao = new DAODepartamento();
        boolean res = dao.save(departamento);
        if(res)
            JOptionPane.showMessageDialog(this, "Se guardo");
        else
            JOptionPane.showMessageDialog(this,"Error");
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreActionPerformed

    private void btoBuscarIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btoBuscarIdActionPerformed
        SessionFactory sf = HibernateUtil.getSessionFactory();
        Session session = sf.openSession();  // Abrir una nueva sesión
        Transaction t = null;

        try {
            t = session.beginTransaction();  // Iniciar la transacción

            // Convertir el texto a Long para la búsqueda
            Long clave = Long.valueOf(txtClave.getText());
            Departamento dep = session.get(Departamento.class, clave);  // Buscar por clave primaria

            if (dep != null) {
                // Mostrar los datos del empleado en los campos de texto
                txtClave.setText(String.valueOf(dep.getClave()));
                txtNombre.setText(dep.getNombre());
            } else {
                JOptionPane.showMessageDialog(this, "Departamento no encontrado.");
            }

            t.commit();  // Confirmar la transacción

        } catch (Exception e) {
            if (t != null) {
                t.rollback();  // Revertir la transacción en caso de error
            }
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        } finally {
            session.close();  // Cerrar la sesión
        }
    }//GEN-LAST:event_btoBuscarIdActionPerformed

    private void btonTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btonTodosActionPerformed
        try {
            // Obtener todos los empleados usando el DAO
            DAODepartamento dao = new DAODepartamento();
            List<Departamento> lstdep = dao.findAll();

            // Verificar si la lista es nula o vacía
            if (lstdep == null || lstdep.isEmpty()) {
                JOptionPane.showMessageDialog(this, "No hay departamentos registrados.");
                return;
            }

            // Crear el modelo para la tabla
            DefaultTableModel modelo = new DefaultTableModel();
            modelo.addColumn("Clave");
            modelo.addColumn("Nombre");

            // Limpiar datos previos en la tabla (por si acaso)
            modelo.setRowCount(0);

            // Agregar filas al modelo con los datos de empleados
            for (Departamento depa : lstdep) {
                modelo.addRow(new Object[]{
                    depa.getClave(), depa.getNombre()
                });
            }

            // Establecer el modelo en la tabla
            jTable1.setModel(modelo);

        } catch (Exception e) {
            // Capturar cualquier error y mostrarlo en un cuadro de diálogo
            JOptionPane.showMessageDialog(this, "Error al obtener empleados: " + e.getMessage());
        }
    }//GEN-LAST:event_btonTodosActionPerformed

    private void txtClaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtClaveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtClaveActionPerformed

    private void btnBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarActionPerformed
        SessionFactory sf = HibernateUtil.getSessionFactory();
        Session session = sf.openSession();  // Se recomienda abrir una nueva sesión.
        Transaction t = null;

        try {
            t = session.beginTransaction();  // Inicia la transacción

            Long clave = Long.valueOf(txtClave.getText());
            Departamento departamentoEncontrado = session.get(Departamento.class, clave);

            if (departamentoEncontrado != null) {
                session.delete(departamentoEncontrado);  // Eliminar el empleado
                t.commit();  // Confirmar la transacción
                JOptionPane.showMessageDialog(this, "Departamento eliminado");
            } else {
                JOptionPane.showMessageDialog(this, "Departamento no encontrado");
            }
        } catch (Exception e) {
            if (t != null) {
                t.rollback();  // Revertir la transacción si hay un error
            }
            JOptionPane.showMessageDialog(this, "Error al eliminar Departamento: " + e.getMessage());
        } finally {
            session.close();  // Cerrar la sesión para liberar recursos
        }
    }//GEN-LAST:event_btnBorrarActionPerformed

    private void btonActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btonActualizarActionPerformed
        // TODO add your handling code here:
        SessionFactory sf = HibernateUtil.getSessionFactory();
        Session session = sf.openSession();  // Abrir una nueva sesión
        Transaction t = null;

        try {
            t = session.beginTransaction();  // Iniciar la transacción

            // Obtener la clave del empleado desde el campo de texto
            Long clave = Long.valueOf(txtClave.getText());

            // Buscar el empleado por su clave
            Departamento departamentoEncontrado = session.get(Departamento.class, clave);
            if (departamentoEncontrado != null) {
                // Actualizar los datos del empleado
                departamentoEncontrado.setNombre(txtNombre.getText());

                session.update(departamentoEncontrado);  // Actualizar en la sesión
                t.commit();  // Confirmar la transacción

                JOptionPane.showMessageDialog(this, "Departamento actualizado");
            } else {
                JOptionPane.showMessageDialog(this, "Departamento no encontrado");
            }
        } catch (Exception e) {
            if (t != null) {
                t.rollback();  // Revertir la transacción en caso de error
            }
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        } finally {
            session.close();  // Cerrar la sesión para liberar recursos
        }
    }//GEN-LAST:event_btonActualizarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBorrar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btoBuscarId;
    private javax.swing.JButton btonActualizar;
    private javax.swing.JButton btonTodos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtClave;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
